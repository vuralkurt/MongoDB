
  //ödev
//coord değeri -95.754168'den küçük olan restoranları bulmak için bir MongoDB sorgusu yazın

use("ULKELER")
db.foods.find({"address.coord":{$lt:-95.754168}});



//ödev
    //-65.754168 'den küçük boylamda yer alan ve 70'den fazla score alan
    // 'Amerikan' mutfağı (cuisine) hazırlamayan restoranları bulmak için bir MongoDB sorgusu yazın.

 use("ULKELER")
db.foods.find({"address.coord":{$lt:-65.754168},"grades.score":{$gt:70},"cuisine":{$ne:"American "}});   




//ödev
//Herhangi bir 'Amerikan' mutfağı hazırlamayan ve Brooklyn borough a 
// ait olmayan, 'A' score alan restoranları bulmak için bir MongoDB sorgusu yazın. 
//Belge, mutfağa göre azalan sırada görüntülenmelidir. 
 
use("ULKELER")
db.foods.find({"borough":{$ne:"Brooklyn"},
"grades.grade":"A","cuisine":{$ne:"American "}}).sort({cuisine:-1}); 




//ödev
//Adının son üç harfi 'ces' olan restoranlar için restoran kimliği, adı, 
//ilçesi ve mutfağını bulmak için bir MongoDB sorgusu yazın

use("ULKELER")
db.foods.find({name:/ces$/ },{restaurant_id:1,_id:0,borough:1,name:1,borough:1,cuisine:1});



//ödev
//Bronx borough a ait , Amerikan veya Çin yemeği hazırlayan restoranları
// bulmak için bir MongoDB sorgusu yazınız

use("ULKELER")
db.foods.find({"borough":"Bronx","cuisine":{$in:["American ","Chinese"]}});



//ödev
//Puanı 10'dan fazla olmayan restoranların restoran id si, adı, ilçesi 
//ve mutfağını bulmak için bir MongoDB sorgusu yazın.

use("ULKELER")
db.foods.find({"grades.score":{$lte:10}},
{restaurant_id:1,_id:0,borough:1,name:1,borough:1,cuisine:1});



 //ödev
// Koordinat (coord[]) dizisinin 2. elemanı 42'den fazla ve 52'ye kadar bir değer içeren 
// restoranların restoran id, adı, adresi ve coğrafi konumunu (coords) bulmak
// için bir MongoDB sorgusu yazın.

use("ULKELER")
db.foods.find({"address.coord.1":{$gt:42,$lt:52}},
{restaurant_id:1,_id:0, name:1, "address.coord":1});



//ödev
// Mutfağın adını artan sırada düzenlemek için bir MongoDB sorgusu yazın ve 
// aynı mutfak için ilçe azalan sırada olmalıdır.

use("ULKELER")
db.foods.find().sort({cuisine:1, borough:-1});
